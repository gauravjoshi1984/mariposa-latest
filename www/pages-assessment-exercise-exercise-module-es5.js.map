{"version":3,"sources":["webpack:///src/app/pages/assessment/exercise/exercise.page.html","webpack:///src/app/pages/assessment/exercise/exercise-routing.module.ts","webpack:///src/app/pages/assessment/exercise/exercise.module.ts","webpack:///src/app/pages/assessment/exercise/exercise.page.scss","webpack:///src/app/pages/assessment/exercise/exercise.page.ts"],"names":["routes","path","component","ExercisePageRoutingModule","imports","forChild","exports","ExercisePageModule","declarations","ExercisePage","dataService","router","apiService","location","navCtrl","imagePicker","assessmentService","formBuilder","imageList","exerciseForm","group","options","maximumImagesCount","getPictures","then","results","console","log","i","length","push","err","splice","stateObject","EXERCISE","value","saveAssessmentState","careCircleId","userId","response","navigateForward","item","controls","setValue","readyFlag","getCareCircleId","getUserInfo","key","getAssessmentStateObject","data","assessmentValues","CARE_NEEDS","Object","keys","forEach","element","addControl","assessmentConfiguration","therapy_types","therapyTypeList","selector","template"],"mappings":"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","file":"pages-assessment-exercise-exercise-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"md\\\">\\n  \\n  <ion-toolbar class=\\\"headtoolbar\\\">\\n    \\n      <ion-row>\\n        <ion-col size=\\\"2\\\">\\n          <ion-toolbar>\\n            <ion-buttons slot=\\\"start\\\">\\n              <!-- <ion-back-button style=\\\"float:left\\\" mode=\\\"md\\\" color=\\\"mdblack\\\" icon=\\\"chevron-back-outline\\\" defaultHref=\\\"admin-sign-in\\\"></ion-back-button> -->\\n            <m-backbutton></m-backbutton>\\n            </ion-buttons>\\n        </ion-toolbar> \\n        </ion-col>\\n        <ion-col size=\\\"8\\\">\\n          <div>\\n            <ion-text color=\\\"mdblack\\\" position=\\\"floating\\\" id=\\\"titletag\\\">Exercise/PT</ion-text>\\n          </div> \\n        </ion-col>\\n      </ion-row>\\n\\n  </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content [formGroup] = \\\"exerciseForm\\\">\\n  <ion-grid style=\\\"padding:24px;height:fit-content\\\">\\n    <!-- Therapy-->\\n\\n    <div style=\\\"padding-top: 0px; margin-bottom: 15px;\\\">\\n      <ion-label style=\\\"font-size: 16px; line-height: 19px;\\\"\\n        >Type of Therapy</ion-label\\n      >\\n    </div>\\n\\n    <!-- CHECKBOX 1 -->\\n\\n    <ion-row style=\\\"align-items: center; margin-top: 5px;\\\" *ngFor=\\\"let therapyType of therapyTypeList\\\">\\n      <ion-col  size=\\\"1\\\">\\n        <div style=\\\"padding-left: 3px;\\\">\\n          <ion-checkbox #therapyType color=\\\"mwhite\\\" checked=\\\"false\\\" [formControlName]=\\\"therapyType\\\"></ion-checkbox>\\n        </div>\\n      </ion-col>\\n      <ion-col\\n        (click)=\\\"generateClick(therapyType)\\\"\\n        size=\\\"11\\\"\\n        style=\\\"padding-top: 0px;\\\"\\n      >\\n        <div>\\n          <ion-text\\n            style=\\\"\\n              font-size: 16px;\\n              line-height: 19px;\\n              font-weight: 300;\\n              margin-left: 12px;\\n            \\\"\\n            color=\\\"mdblack\\\"\\n            >{{therapyType}}</ion-text\\n          >\\n        </div>\\n      </ion-col>\\n    </ion-row>\\n    \\n    <!-- INSTRUCTIONS -->\\n\\n    <div class=\\\"nametag\\\" style=\\\"margin-top: 15px;\\\" *ngIf=\\\"readyFlag\\\">\\n      <ion-text position=\\\"floating\\\" id=\\\"tag\\\">Instructions(optional)</ion-text>\\n    </div>\\n    <div>\\n      <ion-textarea\\n        *ngIf=\\\"readyFlag\\\"\\n        style=\\\"height: 120px;\\\"\\n        class=\\\"input\\\"\\n        placeholder=\\\"Write here\\\"\\n        formControlName = \\\"instructions\\\"\\n      ></ion-textarea>\\n    </div>\\n\\n    <!-- ADD IMAGE -->\\n    <app-addimage (click)=\\\"addImage()\\\"></app-addimage>\\n    <ion-text>\\n      <div class=\\\"imagelist\\\" *ngFor=\\\"let img of imageList; let j=index\\\">\\n        <ion-grid fixed class=\\\"ion-no-padding\\\">\\n          <ion-row>\\n            <ion-col style=\\\"padding-top: 11px;\\\" size=\\\"8\\\"><span>{{img.substring(img.lastIndexOf(\\\"/\\\") + 1) | slice:0:12}}</span></ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <ion-button\\n              fill=\\\"clear\\\"\\n              shape=\\\"round\\\"\\n              class=\\\"dltbtn\\\"\\n              (click)=\\\"removeImg(j)\\\"        >\\n              <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/trash.svg\\\"></ion-icon>\\n              Delete\\n            </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid> \\n      </div>\\n    </ion-text>\\n\\n  </ion-grid>\\n</ion-content>\\n\\n<ion-footer>\\n  <div id=\\\"button\\\">\\n    <ion-button [disabled]=\\\"false\\\" class=\\\"btnblue\\\" type=\\\"submit\\\"  id=\\\"signup\\\" (click) = \\\"save()\\\">SAVE & PROCEED</ion-button>\\n  </div>  \\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ExercisePage } from './exercise.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ExercisePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ExercisePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ExercisePageRoutingModule } from './exercise-routing.module';\n\nimport { ExercisePage } from './exercise.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ExercisePageRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ExercisePage]\n})\nexport class ExercisePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Fzc2Vzc21lbnQvZXhlcmNpc2UvZXhlcmNpc2UucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { Location } from '@angular/common';\nimport { AssessmentServiceService } from '../assessment-service.service';\nimport { ApiService } from 'src/app/http.service';\nimport { Router } from '@angular/router';\nimport { DataserviceService } from '../../dataservice.service';\nimport { NavController } from '@ionic/angular';\nimport {\n  ImagePicker,\n  ImagePickerOptions,\n} from \"@ionic-native/image-picker/ngx\";\n\n@Component({\n  selector: 'app-exercise',\n  templateUrl: './exercise.page.html',\n  styleUrls: ['./exercise.page.scss'],\n})\nexport class ExercisePage implements OnInit {\n  exerciseForm: FormGroup;\n  careCircleId;\n  userId;\n  therapyTypeList;\n  stateObject;\n  readyFlag;\n  constructor(private dataService: DataserviceService,\n    private router: Router,\n    private apiService: ApiService,\n    private location: Location,\n    private navCtrl: NavController,\n    private imagePicker: ImagePicker,\n    private assessmentService: AssessmentServiceService,\n    private formBuilder: FormBuilder) {\n      this.exerciseForm = this.formBuilder.group({ });\n    }\n\n\n    imageList = [];\n\n  ngOnInit() {\n  }\n\n  addImage() {\n    let options: ImagePickerOptions = {\n      maximumImagesCount: 4,\n    };\n    this.imagePicker.getPictures(options).then(\n      (results) => {\n        console.log(results);\n        for (var i = 0; i < results.length; i++) {\n          this.imageList.push(results[i]);\n        }\n      },\n      (err) => {}\n    );\n  }\n  removeImg(i) {\n    console.log(\"*\", i);\n    this.imageList.splice(i, 1);\n  }\n\n\n  save(){\n    if (this.stateObject == null){\n      this.stateObject = {};\n    }\n    this.stateObject.EXERCISE = this.exerciseForm.value;\n    this.assessmentService.saveAssessmentState(this.careCircleId, 'CARE_NEEDS', this.userId, this.stateObject).then((response) => {\n      console.log(response);\n      //this.router.navigate(['/assessment/assessmentbar']);\n      this.navCtrl.navigateForward(['/assessment/assessmentbar']);\n    });\n\n  }\n\n  generateClick(item: any) {\n    this.exerciseForm.controls[item].setValue(!this.exerciseForm.controls[item].value)\n  }\n  \n\n  async ionViewWillEnter(){\n    this.readyFlag = false\n    this.careCircleId = await this.assessmentService.getCareCircleId();\n    this.userId = await this.dataService.getUserInfo();\n    this.userId = this.userId.userId;\n    const key = 'EXERCISE';\n    this.exerciseForm = new FormGroup({});\n\n    this.assessmentService.getAssessmentStateObject().then((data) => {\n      console.log(\"came here 33\",data)\n\n      // first time load\n      this.stateObject = data.assessmentValues.CARE_NEEDS;\n      if (data.assessmentValues.CARE_NEEDS != null && data.assessmentValues.CARE_NEEDS[key] != null){\n        Object.keys(data.assessmentValues.CARE_NEEDS[key]).forEach((element: any) => {\n          this.exerciseForm.addControl(element, new FormControl(data.assessmentValues.CARE_NEEDS[key][element]));\n        });\n      }\n      else{\n        // data is not present\n        this.exerciseForm.addControl('instructions', new FormControl());\n        data.assessmentConfiguration.CARE_NEEDS[key].therapy_types.forEach(element => {\n          this.exerciseForm.addControl(element, new FormControl());\n        });\n      }\n      this.therapyTypeList = data.assessmentConfiguration.CARE_NEEDS[key].therapy_types;\n      this.readyFlag = true\n    });\n  }\n}\n"]}