{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-f9f11302.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/http.service.ts","./src/app/pages/assessment/assessment-service.service.ts","./src/app/pages/creatingcare/creatingcare.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;ACxC1C;AACO;AACC;AACF;AAEjD,8CAA8C;AAC9C,MAAM,SA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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-821f9ab1.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Storage } from '@ionic/storage';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoadingController } from '@ionic/angular';\nimport { ToastController } from '@ionic/angular';\n\n// const urlPrefix = 'http://localhost:8080/';\nconst urlPrefix = 'http://mariposa-dev-elb-1389153451.us-east-1.elb.amazonaws.com/';\n\n@Injectable({\n    providedIn: 'root'\n  })\nexport class ApiService{\n    token: string;\n    loading;\n    constructor(private http: HttpClient, private loadingController: LoadingController, private toastController: ToastController){\n    }\n    async presentLoading() {\n        return await this.loadingController.create({\n            cssClass: 'custom-class',\n            message: 'Please wait...',\n        });\n    }\n    async presentToast(message) {\n        const toast = await this.toastController.create({\n          message,\n          color: 'danger',\n          duration: 3000\n        });\n        toast.present();\n    }\n    httpErrorHandler(error) {\n        if (error.status === 0 || error.status === 500) {\n            const msg = 'Error comunicating to server! Please check your connectivity!!';\n            this.presentToast(msg);\n            return { msg };\n        } else {\n            this.presentToast(error.error.msg);\n            return error.error;\n        }\n    }\n    get(route, params){\n        return new Promise(async (resolve, reject) => {\n            const URL = urlPrefix + route;\n            const loading = await this.presentLoading();\n            loading.present();\n            this.http.get(URL, {params}).subscribe((response: Response) => {\n                loading.dismiss();\n                resolve(response);\n            }, error => {\n                loading.dismiss();\n                reject(this.httpErrorHandler(error));\n            });\n        });\n    }\n    post(route, params){\n        this.presentLoading();\n        return new Promise(async (resolve, reject) => {\n            const URL = urlPrefix + route;\n            const loading = await this.presentLoading();\n            loading.present();\n            this.http.post(URL, params).subscribe((response: any) => {\n                loading.dismiss();\n                resolve(response);\n            }, error => {\n                loading.dismiss();\n                reject(this.httpErrorHandler(error));\n            });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { ApiService } from 'src/app/http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssessmentServiceService {\n\n  constructor(private storage: Storage, private apiService: ApiService) { }\n\n  async getCareCircleId(){\n    const careCircleDetails = await this.storage.get('careCircleDetails');\n    return careCircleDetails.careCircleId;\n  }\n\n  async setAssessmentStateObject(assessmentState) {\n    await this.storage.set('assessmentState', assessmentState);\n  }\n\n  async getAssessmentStateObject(){\n    const assessmentState = await this.storage.get('assessmentState');\n    return assessmentState;\n  }\n  async saveAssessmentState(careCircleId, key, userId, objectToSave){\n    await this.apiService.post('updateAssessment/?careCircleId=' + careCircleId + '&assessmentKey=' + key + '&userId=' + userId, objectToSave).then( async (response) => {\n      const assessmentObject = await this.getAssessmentStateObject();\n      assessmentObject.assessmentValues[key] = objectToSave;\n      await this.setAssessmentStateObject(assessmentObject)\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreatingcareService {\n  data: any = {};\n  constructor(private storage: Storage) { }\n  setCareCircleName(careCircleName){\n    this.data.careCircleName = careCircleName;\n    this.storage.set('careCircleName', careCircleName);\n  }\n  async getCareCircleName(){\n    if (!this.data.careCircleName){\n      this.data.careCircleName = await this.storage.get('careCircleName');\n    }\n    return this.data.careCircleName;\n  }\n  setCareCircleId(careCircleId){\n    this.data.careCircleId = careCircleId;\n    this.storage.set('careCircleId', careCircleId);\n  }\n  async getCareCircleID(){\n    if (!this.data.careCircleId){\n      this.data.careCircleId = await this.storage.get('careCircleId');\n    }\n    return this.data.careCircleId;\n  }\n  setAvailableCareCircleDetails(careCircleList){\n    this.data.careCircleList = careCircleList;\n    this.storage.set('careCircleList', careCircleList);\n  }\n  async getAvailableCareCircleDetails(){\n    if (!this.data.careCircleList){\n      this.data.careCircleList = await this.storage.get('careCircleList');\n    }\n    return this.data.careCircleList;\n  }\n  setCareCircleDetails(careCircleDetails){\n    this.data.careCircleDetails = careCircleDetails;\n    this.storage.set('careCircleDetails', careCircleDetails);\n  }\n  getCareCircleDetails(){\n    let careCircleObj = null;\n    if (this.data.careCircleList != null){\n      this.data.careCircleList.forEach(element => {\n        if (element.careCircleId === this.data.careCircleId){\n          careCircleObj = element;\n        }\n      });\n    }\n    return careCircleObj;\n  }\n}\n"],"sourceRoot":"webpack:///"}