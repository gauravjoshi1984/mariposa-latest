{"version":3,"sources":["webpack:///src/app/pages/assessment/toileting/toileting.page.html","webpack:///src/app/pages/assessment/toileting/toileting-routing.module.ts","webpack:///src/app/pages/assessment/toileting/toileting.module.ts","webpack:///src/app/pages/assessment/toileting/toileting.page.scss","webpack:///src/app/pages/assessment/toileting/toileting.page.ts"],"names":["routes","path","component","ToiletingPageRoutingModule","imports","forChild","exports","ToiletingPageModule","declarations","ToiletingPage","dataService","router","navCtrl","imagePicker","assessmentService","formBuilder","formCreated","imageList","options","maximumImagesCount","getPictures","then","results","console","log","i","length","push","err","splice","key","getCareCircleId","careCircleId","getUserInfo","userId","toiletingForm","getAssessmentStateObject","data","stateObject","assessmentValues","CARE_NEEDS","Object","keys","forEach","element","addControl","ev","value","saveAssessmentState","response","navigateForward","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,0BAA0B;AAAA;AAAA,KAAvC;;AAAaA,8BAA0B,6DAJtC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIsC,GAA1BH,0BAA0B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAaI,mBAAmB;AAAA;AAAA,KAAhC;;AAAaA,uBAAmB,6DAX/B,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,oFAJO,EAKP,kEALO,EAMP,kEANO,CADD;AASRI,kBAAY,EAAE,CAAC,6DAAD;AATN,KAAT,CAW+B,GAAnBD,mBAAmB,CAAnB;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACgBf,QAAaE,aAAa;AAOxB,6BAAoBC,WAApB,EACoBC,MADpB,EAEoBC,OAFpB,EAGoBC,WAHpB,EAIoBC,iBAJpB,EAKoBC,WALpB,EAK8C;AAAA;;AAL1B,aAAAL,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,iBAAA,GAAAA,iBAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AAPpB,aAAAC,WAAA,GAAc,KAAd;AAaA,aAAAC,SAAA,GAAY,EAAZ;AANiD;;AAZzB;AAAA;AAAA,mCAcb,CAEV;AAhBuB;AAAA;AAAA,mCAoBb;AAAA;;AACT,cAAIC,OAAO,GAAuB;AAChCC,8BAAkB,EAAE;AADY,WAAlC;AAGA,eAAKN,WAAL,CAAiBO,WAAjB,CAA6BF,OAA7B,EAAsCG,IAAtC,CACE,UAACC,OAAD,EAAa;AACXC,mBAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,iBAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,mBAAI,CAACR,SAAL,CAAeU,IAAf,CAAoBL,OAAO,CAACG,CAAD,CAA3B;AACD;AACF,WANH,EAOE,UAACG,GAAD,EAAS,CAAE,CAPb;AASD;AAjCuB;AAAA;AAAA,kCAkCdH,CAlCc,EAkCX;AACXF,iBAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBC,CAAjB;AACA,eAAKR,SAAL,CAAeY,MAAf,CAAsBJ,CAAtB,EAAyB,CAAzB;AACD;AArCuB;AAAA;AAAA,2CA2CF;;;;;;;;AACpB,yBAAKK,GAAL,GAAW,WAAX;;AACoB,2BAAM,KAAKhB,iBAAL,CAAuBiB,eAAvB,EAAN;;;AAApB,yBAAKC,Y;;AACS,2BAAM,KAAKtB,WAAL,CAAiBuB,WAAjB,EAAN;;;AAAd,yBAAKC,M;AACL,yBAAKA,MAAL,GAAc,KAAKA,MAAL,CAAYA,MAA1B;AACA,yBAAKC,aAAL,GAAqB,IAAI,wDAAJ,CAAc,EAAd,CAArB;AAEA,yBAAKrB,iBAAL,CAAuBsB,wBAAvB,GAAkDf,IAAlD,CAAuD,UAACgB,IAAD,EAAU;AAC/D,4BAAI,CAACC,WAAL,GAAmBD,IAAI,CAACE,gBAAL,CAAsBC,UAAzC;;AACA,0BAAIH,IAAI,CAACE,gBAAL,CAAsBC,UAAtB,IAAoC,IAApC,IAA4CH,IAAI,CAACE,gBAAL,CAAsBC,UAAtB,CAAiC,MAAI,CAACV,GAAtC,KAA8C,IAA9F,EAAmG;AACjG;AACAW,8BAAM,CAACC,IAAP,CAAYL,IAAI,CAACE,gBAAL,CAAsBC,UAAtB,CAAiC,MAAI,CAACV,GAAtC,CAAZ,EAAwDa,OAAxD,CAAgE,UAACC,OAAD,EAAkB;AAChF,gCAAI,CAACT,aAAL,CAAmBU,UAAnB,CAA8BD,OAA9B,EAAuC,IAAI,0DAAJ,CAAgB,MAAI,CAACN,WAAL,CAAiB,MAAI,CAACR,GAAtB,EAA2Bc,OAA3B,CAAhB,CAAvC;AACD,yBAFD;AAGD,uBALD,MAMI;AACF;AACA,8BAAI,CAACT,aAAL,CAAmBU,UAAnB,CAA8B,cAA9B,EAA8C,IAAI,0DAAJ,EAA9C;;AACA,8BAAI,CAACV,aAAL,CAAmBU,UAAnB,CAA8B,QAA9B,EAAwC,IAAI,0DAAJ,CAAgB,KAAhB,CAAxC;;AACA,8BAAI,CAACV,aAAL,CAAmBU,UAAnB,CAA8B,SAA9B,EAAyC,IAAI,0DAAJ,CAAgB,KAAhB,CAAzC;AACD;;AACD,4BAAI,CAAC7B,WAAL,GAAmB,IAAnB;AACD,qBAfD;;;;;;;;;AAgBD;AAlEuB;AAAA;AAAA,qCAmEX8B,EAnEW,EAmEF;AACpBvB,iBAAO,CAACC,GAAR,CAAYsB,EAAZ;AACD;AArEuB;AAAA;AAAA,+BAuEpB;AAAA;;AACF,cAAI,KAAKR,WAAL,IAAoB,IAAxB,EAA6B;AAC3B,iBAAKA,WAAL,GAAmB,EAAnB;AACD;;AACD,eAAKA,WAAL,CAAiB,KAAKR,GAAtB,IAA6B,KAAKK,aAAL,CAAmBY,KAAhD;AACA,eAAKjC,iBAAL,CAAuBkC,mBAAvB,CAA2C,KAAKhB,YAAhD,EAA8D,YAA9D,EAA4E,KAAKE,MAAjF,EAAyF,KAAKI,WAA9F,EAA2GjB,IAA3G,CAAgH,UAAC4B,QAAD,EAAc;AAC5H1B,mBAAO,CAACC,GAAR,CAAYyB,QAAZ;;AACA,kBAAI,CAACrC,OAAL,CAAasC,eAAb,CAA6B,CAAC,2BAAD,CAA7B;AACD,WAHD;AAID;AAhFuB;;AAAA;AAAA,OAA1B;;;;cAOmC;;cACL;;cACC;;cACI;;cACM;;cACN;;;;AAZtBzC,iBAAa,6DALzB,gEAAU;AACT0C,cAAQ,EAAE,eADD;AAETC,cAAQ,EAAR;AAAA;AAAA,mHAFS;;;;AAAA,KAAV,CAKyB,GAAb3C,aAAa,CAAb","file":"pages-assessment-toileting-toileting-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"md\\\">\\n\\n  \\n  <ion-toolbar class=\\\"headtoolbar\\\">\\n    \\n      <ion-row>\\n        <ion-col size=\\\"2\\\">\\n          <ion-toolbar>\\n            <ion-buttons slot=\\\"start\\\">\\n             <m-backbutton></m-backbutton>\\n            </ion-buttons>\\n        </ion-toolbar> \\n        </ion-col>\\n        <ion-col size=\\\"8\\\">\\n          <div>\\n            <ion-text color=\\\"mdblack\\\" position=\\\"floating\\\" id=\\\"titletag\\\">Toileting</ion-text>\\n          </div> \\n        </ion-col>\\n      </ion-row>\\n\\n    </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"formCreated\\\">\\n    <ion-grid style=\\\"padding:24px;height:fit-content\\\">\\n        <div [formGroup]=\\\"toiletingForm\\\">\\n            <!-- <div *ngFor=\\\"let item of electronicList\\\"> -->\\n            <app-toggle [form]=\\\"toiletingForm\\\" name=\\\"Toilet\\\"></app-toggle>\\n            <hr class=\\\"solid\\\" />\\n            <app-toggle [form]=\\\"toiletingForm\\\" name=\\\"Commode\\\"></app-toggle>\\n            <hr class=\\\"solid\\\" />\\n            <!-- </div> -->\\n            <!-- INSTRUCTIONS -->\\n            <div class=\\\"nametag\\\" style=\\\"margin-top: 0px;\\\">\\n                <ion-text position=\\\"floating\\\" id=\\\"tag\\\">Instructions(optional)</ion-text>\\n            </div>\\n            <div>\\n                <ion-textarea formControlName=\\\"instructions\\\" style=\\\"height: 120px;\\\" class=\\\"input\\\" placeholder=\\\"Write here\\\"></ion-textarea>\\n            </div>\\n            <!-- ADD IMAGE -->\\n            <app-addimage (click)=\\\"addImage()\\\"></app-addimage>\\n    <ion-text>\\n      <div class=\\\"imagelist\\\" *ngFor=\\\"let img of imageList; let j=index\\\">\\n        <ion-grid fixed class=\\\"ion-no-padding\\\">\\n          <ion-row>\\n            <ion-col style=\\\"padding-top: 11px;\\\" size=\\\"8\\\"><span>{{img.substring(img.lastIndexOf(\\\"/\\\") + 1) | slice:0:12}}</span></ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <ion-button\\n              fill=\\\"clear\\\"\\n              shape=\\\"round\\\"\\n              class=\\\"dltbtn\\\"\\n              (click)=\\\"removeImg(j)\\\"        >\\n              <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/trash.svg\\\"></ion-icon>\\n              Delete\\n            </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid> \\n      </div>\\n    </ion-text>\\n        </div>\\n    </ion-grid>\\n</ion-content>\\n\\n<ion-footer>\\n    <div id=\\\"button\\\">\\n        <ion-button [disabled]=\\\"false\\\" class=\\\"btnblue\\\" type=\\\"submit\\\" id=\\\"signup\\\" (click)= \\\"save()\\\" >SAVE & PROCEED</ion-button>\\n    </div>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ToiletingPage } from './toileting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ToiletingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ToiletingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ToiletingPageRoutingModule } from './toileting-routing.module';\n\nimport { ToiletingPage } from './toileting.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ToiletingPageRoutingModule,\n    SharedModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ToiletingPage]\n})\nexport class ToiletingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Fzc2Vzc21lbnQvdG9pbGV0aW5nL3RvaWxldGluZy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { DataserviceService } from '../../dataservice.service';\nimport { Router } from '@angular/router';\nimport { AssessmentServiceService } from '../assessment-service.service';\nimport { NavController } from '@ionic/angular';\nimport {\n  ImagePicker,\n  ImagePickerOptions,\n} from \"@ionic-native/image-picker/ngx\";\n\n@Component({\n  selector: 'app-toileting',\n  templateUrl: './toileting.page.html',\n  styleUrls: ['./toileting.page.scss'],\n})\nexport class ToiletingPage implements OnInit {\n  toiletingForm: FormGroup;\n  key;\n  careCircleId;\n  userId;\n  formCreated = false;\n  stateObject;\n  constructor(private dataService: DataserviceService,\n              private router: Router,\n              private navCtrl: NavController,\n              private imagePicker: ImagePicker,\n              private assessmentService: AssessmentServiceService,\n              private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n\n  }\n\n  imageList = [];\n\n  addImage() {\n    let options: ImagePickerOptions = {\n      maximumImagesCount: 4,\n    };\n    this.imagePicker.getPictures(options).then(\n      (results) => {\n        console.log(results);\n        for (var i = 0; i < results.length; i++) {\n          this.imageList.push(results[i]);\n        }\n      },\n      (err) => {}\n    );\n  }\n  removeImg(i) {\n    console.log(\"*\", i);\n    this.imageList.splice(i, 1);\n  }\n\n\n\n\n\n  async ionViewWillEnter(){\n    this.key = 'TOILETING';\n    this.careCircleId = await this.assessmentService.getCareCircleId();\n    this.userId = await this.dataService.getUserInfo();\n    this.userId = this.userId.userId;\n    this.toiletingForm = new FormGroup({});\n\n    this.assessmentService.getAssessmentStateObject().then((data) => {\n      this.stateObject = data.assessmentValues.CARE_NEEDS;\n      if (data.assessmentValues.CARE_NEEDS != null && data.assessmentValues.CARE_NEEDS[this.key] != null){\n        // data is present\n        Object.keys(data.assessmentValues.CARE_NEEDS[this.key]).forEach((element: any) => {\n          this.toiletingForm.addControl(element, new FormControl(this.stateObject[this.key][element]));\n        });\n      }\n      else{\n        // data is not present\n        this.toiletingForm.addControl('instructions', new FormControl());\n        this.toiletingForm.addControl('Toilet', new FormControl(false));\n        this.toiletingForm.addControl('Commode', new FormControl(false));\n      }\n      this.formCreated = true ;\n    });\n  }\n  changeToggle(ev: any) {\n    console.log(ev);\n  }\n  \n  save(){\n    if (this.stateObject == null){\n      this.stateObject = {};\n    }\n    this.stateObject[this.key] = this.toiletingForm.value;\n    this.assessmentService.saveAssessmentState(this.careCircleId, 'CARE_NEEDS', this.userId, this.stateObject).then((response) => {\n      console.log(response);\n      this.navCtrl.navigateForward(['/assessment/assessmentbar']);\n    });\n  }\n\n}\n"]}