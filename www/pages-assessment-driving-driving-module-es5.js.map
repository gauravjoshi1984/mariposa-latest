{"version":3,"sources":["webpack:///src/app/pages/assessment/driving/driving.page.html","webpack:///src/app/pages/assessment/driving/driving-routing.module.ts","webpack:///src/app/pages/assessment/driving/driving.module.ts","webpack:///src/app/pages/assessment/driving/driving.page.scss","webpack:///src/app/pages/assessment/driving/driving.page.ts"],"names":["routes","path","component","DrivingPageRoutingModule","imports","forChild","exports","DrivingPageModule","declarations","DrivingPage","router","apiService","location","imagePicker","assessmentService","dataService","navCtrl","stateObject","formData","abilityToDrive","instructions","imageList","options","maximumImagesCount","getPictures","then","results","console","log","i","length","push","err","splice","formItem","ev","DRIVING","saveAssessmentState","careCircleId","userId","response","navigateForward","readyFlag","getCareCircleId","getUserInfo","key","getAssessmentStateObject","data","assessmentValues","CARE_NEEDS","selector","template"],"mappings":"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","file":"pages-assessment-driving-driving-module-es5.js","sourcesContent":["export default \"<ion-header mode=\\\"md\\\">\\n\\n    <ion-toolbar class=\\\"headtoolbar\\\">\\n\\n        <ion-row>\\n            <ion-col size=\\\"2\\\">\\n                <ion-toolbar>\\n                    <ion-buttons slot=\\\"start\\\">\\n                        <m-backbutton></m-backbutton>\\n                    </ion-buttons>\\n                </ion-toolbar>\\n            </ion-col>\\n            <ion-col size=\\\"8\\\">\\n                <div>\\n                    <ion-text color=\\\"mdblack\\\" position=\\\"floating\\\" id=\\\"titletag\\\">Driving / Transportation</ion-text>\\n                </div>\\n            </ion-col>\\n        </ion-row>\\n\\n    </ion-toolbar>\\n\\n</ion-header>\\n\\n<ion-content>\\n    <ion-grid style=\\\"padding:24px;height:fit-content\\\">\\n\\n        <app-toggle [name]=\\\"'Senior able to drive a Car'\\\" [value]=\\\"formData.abilityToDrive\\\" (result)=\\\"changeToggle('abilityToDrive',$event)\\\"></app-toggle>\\n        <hr class=\\\"solid\\\" />\\n        <!-- INSTRUCTIONS -->\\n\\n        <div class=\\\"nametag\\\" style=\\\"margin-top: 0px;\\\">\\n            <ion-text position=\\\"floating\\\" id=\\\"tag\\\">Instructions(optional)</ion-text>\\n        </div>\\n        <div>\\n            <ion-textarea style=\\\"height: 120px;\\\" class=\\\"input\\\" placeholder=\\\"Write here\\\" [(ngModel)]=\\\"formData.instructions\\\"></ion-textarea>\\n        </div>\\n\\n        <!-- ADD IMAGE -->\\n        <app-addimage (click)=\\\"addImage()\\\"></app-addimage>\\n    <ion-text>\\n      <div class=\\\"imagelist\\\" *ngFor=\\\"let img of imageList; let j=index\\\">\\n        <ion-grid fixed class=\\\"ion-no-padding\\\">\\n          <ion-row>\\n            <ion-col style=\\\"padding-top: 11px;\\\" size=\\\"8\\\"><span>{{img.substring(img.lastIndexOf(\\\"/\\\") + 1) | slice:0:12}}</span></ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <ion-button\\n              fill=\\\"clear\\\"\\n              shape=\\\"round\\\"\\n              class=\\\"dltbtn\\\"\\n              (click)=\\\"removeImg(j)\\\"        >\\n              <ion-icon slot=\\\"icon-only\\\" src=\\\"assets/trash.svg\\\"></ion-icon>\\n              Delete\\n            </ion-button>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid> \\n      </div>\\n    </ion-text>\\n\\n    </ion-grid>\\n</ion-content>\\n\\n<ion-footer>\\n    <div id=\\\"button\\\">\\n        <ion-button [disabled]=\\\"false\\\" class=\\\"btnblue\\\" type=\\\"submit\\\" id=\\\"signup\\\" (click)=\\\"save()\\\">SAVE & PROCEED</ion-button>\\n    </div>\\n</ion-footer>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DrivingPage } from './driving.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DrivingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DrivingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DrivingPageRoutingModule } from './driving-routing.module';\n\nimport { DrivingPage } from './driving.page';\nimport { SharedModule } from '../../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DrivingPageRoutingModule,\n    SharedModule,\n  ],\n  declarations: [DrivingPage]\n})\nexport class DrivingPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2Fzc2Vzc21lbnQvZHJpdmluZy9kcml2aW5nLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/app/http.service';\nimport { Location } from '@angular/common';\nimport { AssessmentServiceService } from '../assessment-service.service';\nimport { DataserviceService } from '../../dataservice.service';\nimport {\n  ImagePicker,\n  ImagePickerOptions,\n} from \"@ionic-native/image-picker/ngx\";\n\n@Component({\n  selector: 'app-driving',\n  templateUrl: './driving.page.html',\n  styleUrls: ['./driving.page.scss'],\n})\nexport class DrivingPage implements OnInit {\n  constructor(private router: Router,\n              private apiService: ApiService,\n              private location: Location,\n              private imagePicker: ImagePicker,\n              private assessmentService: AssessmentServiceService,\n              private dataService: DataserviceService,\n              private navCtrl: NavController) { }\n  stateObject: any = {};\n  careCircleId;\n  userId;\n  readyFlag;\n  formData: any = {\n    abilityToDrive: null,\n    instructions: null\n  };\n\n\n  ngOnInit() {\n  }\n\n  imageList = [];\n\n  addImage() {\n    let options: ImagePickerOptions = {\n      maximumImagesCount: 4,\n    };\n    this.imagePicker.getPictures(options).then(\n      (results) => {\n        console.log(results);\n        for (var i = 0; i < results.length; i++) {\n          this.imageList.push(results[i]);\n        }\n      },\n      (err) => {}\n    );\n  }\n  removeImg(i) {\n    console.log(\"*\", i);\n    this.imageList.splice(i, 1);\n  }\n\n\n  changeToggle(formItem: any , ev: any) {\n    console.log(ev);\n    this.formData[formItem] = ev;\n  }\n\n\n  save(){\n    if (this.stateObject == null){\n      this.stateObject = {};\n    }\n    this.stateObject.DRIVING = this.formData;\n    this.assessmentService.saveAssessmentState(this.careCircleId, 'CARE_NEEDS', this.userId, this.stateObject).then((response) => {\n      console.log(response);\n      this.navCtrl.navigateForward(['/assessment/assessmentbar']);\n    });\n    console.log('called Save', this.formData);\n  }\n  \n  async ionViewWillEnter(){\n    this.readyFlag = false;\n    this.careCircleId = await this.assessmentService.getCareCircleId();\n    this.userId = await this.dataService.getUserInfo();\n    this.userId = this.userId.userId;\n    const key = 'DRIVING';\n\n    this.assessmentService.getAssessmentStateObject().then((data) => {\n      // first time load\n      this.stateObject = data.assessmentValues.CARE_NEEDS;\n      if (data.assessmentValues.CARE_NEEDS != null && data.assessmentValues.CARE_NEEDS[key] != null){\n        this.formData = data.assessmentValues.CARE_NEEDS[key];\n      }\n      else{\n        // do nothing\n      }\n      this.readyFlag = true;\n    });\n  }\n\n}\n"]}